// Code generated by goctl. DO NOT EDIT.
package types

// The basic response with data | 基础带数据信息
// swagger:model BaseDataInfo
type BaseDataInfo struct {
	// Error code | 错误代码
	Code int `json:"code"`
	// Message | 提示信息
	Msg string `json:"msg"`
	// Data | 数据
	Data string `json:"data,omitempty"`
}

// The basic response with data | 基础带数据信息
// swagger:model BaseListInfo
type BaseListInfo struct {
	// The total number of data | 数据总数
	Total uint64 `json:"total"`
	// Data | 数据
	Data string `json:"data,omitempty"`
}

// The basic response without data | 基础不带数据信息
// swagger:model BaseMsgResp
type BaseMsgResp struct {
	// Error code | 错误代码
	Code int `json:"code"`
	// Message | 提示信息
	Msg string `json:"msg"`
}

// The page request parameters | 列表请求参数
// swagger:model PageInfo
type PageInfo struct {
	// Page number | 第几页
	// required : true
	// min : 0
	Page uint64 `json:"page" validate:"required,number,gt=0"`
	// Page size | 单页数据行数
	// required : true
	// max : 100000
	PageSize uint64 `json:"pageSize" validate:"required,number,lt=100000"`
}

// Basic ID request | 基础ID参数请求
// swagger:model IDReq
type IDReq struct {
	// ID
	// Required: true
	Id uint64 `json:"id" validate:"number"`
}

// Basic IDs request | 基础ID数组参数请求
// swagger:model IDsReq
type IDsReq struct {
	// IDs
	// Required: true
	Ids []uint64 `json:"ids"`
}

// Basic ID request | 基础ID地址参数请求
// swagger:model IDPathReq
type IDPathReq struct {
	// ID
	// Required: true
	Id uint64 `path:"id"`
}

// Basic UUID request in path | 基础UUID地址参数请求
// swagger:model UUIDPathReq
type UUIDPathReq struct {
	// ID
	// Required: true
	Id string `path:"id"`
}

// Basic UUID request | 基础UUID参数请求
// swagger:model UUIDReq
type UUIDReq struct {
	// ID
	// required : true
	// max length : 36
	// min length : 36
	Id string `json:"id" validate:"required,len=36"`
}

// Basic UUID array request | 基础UUID数组参数请求
// swagger:model UUIDsReq
type UUIDsReq struct {
	// Ids
	// Required: true
	Ids []string `json:"ids"`
}

// The base ID response data | 基础ID信息
// swagger:model BaseIDInfo
type BaseIDInfo struct {
	// ID
	Id *uint64 `json:"id,optional"`
	// Create date | 创建日期
	CreatedAt *int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt *int64 `json:"updatedAt,optional"`
}

// The base UUID response data | 基础UUID信息
// swagger:model BaseUUIDInfo
type BaseUUIDInfo struct {
	// ID
	Id *string `json:"id,optional"`
	// Create date | 创建日期
	CreatedAt *int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt *int64 `json:"updatedAt,optional"`
}

type LoginInfo struct{
	Username *string `json:"username"`
	Password *string `json:"password"`
}

// The response data of department information | Department信息
// swagger:model DepartmentInfo
type DepartmentInfo struct {
	BaseIDInfo
	// The name of the department.
	Name *string `json:"name,optional"`
	// The area where the department is located.
	Area *string `json:"area,optional"`
	// Description of the department.
	Description *string `json:"description,optional"`
	// Comma-separated list of parent department IDs in ascending order.
	ParentDepartments *string `json:"parentDepartments,optional"`
}

// The response data of department list | Department列表数据
// swagger:model DepartmentListResp
type DepartmentListResp struct {
	BaseDataInfo
	// Department list data | Department列表数据
	Data DepartmentListInfo `json:"data"`
}

// Department list data | Department列表数据
// swagger:model DepartmentListInfo
type DepartmentListInfo struct {
	BaseListInfo
	// The API list data | Department列表数据
	Data []DepartmentInfo `json:"data"`
}

// Get department list request params | Department列表请求参数
// swagger:model DepartmentListReq
type DepartmentListReq struct {
	PageInfo
	// The name of the department.
	Name *string `json:"name,optional"`
	// The area where the department is located.
	Area *string `json:"area,optional"`
	// Description of the department.
	Description *string `json:"description,optional"`
}

// Department information response | Department信息返回体
// swagger:model DepartmentInfoResp
type DepartmentInfoResp struct {
	BaseDataInfo
	// Department information | Department数据
	Data DepartmentInfo `json:"data"`
}

// The response data of role information | Role信息
// swagger:model RoleInfo
type RoleInfo struct {
	BaseIDInfo
	// The name of the role.
	Name *string `json:"name,optional"`
	// The weight of the role. Smaller values indicate higher priority.
	Weight *int `json:"weight,optional"`
}

// The response data of role list | Role列表数据
// swagger:model RoleListResp
type RoleListResp struct {
	BaseDataInfo
	// Role list data | Role列表数据
	Data RoleListInfo `json:"data"`
}

// Role list data | Role列表数据
// swagger:model RoleListInfo
type RoleListInfo struct {
	BaseListInfo
	// The API list data | Role列表数据
	Data []RoleInfo `json:"data"`
}

// Get role list request params | Role列表请求参数
// swagger:model RoleListReq
type RoleListReq struct {
	PageInfo
	// The name of the role.
	Name *string `json:"name,optional"`
}

// Role information response | Role信息返回体
// swagger:model RoleInfoResp
type RoleInfoResp struct {
	BaseDataInfo
	// Role information | Role数据
	Data RoleInfo `json:"data"`
}

// The response data of user information | User信息
// swagger:model UserInfo
type UserInfo struct {
	BaseIDInfo
	// User account.
	Account *string `json:"account,optional"`
	// User name.
	Name *string `json:"name,optional"`
	// User password.
	Password *string `json:"password,optional"`
	// ID of the user's department.
	DepartmentId *uint64 `json:"departmentId,optional"`
	// ID of the user's role.
	RoleId *uint64 `json:"roleId,optional"`
	// User status (enabled(true) or disabled(false)).
	Status *bool `json:"status,optional"`
	// User description.
	Description *string `json:"description,optional"`
	// User email.
	Email *string `json:"email,optional"`
	// User phone number.
	PhoneNumber *string `json:"phoneNumber,optional"`
}

// The response data of user list | User列表数据
// swagger:model UserListResp
type UserListResp struct {
	BaseDataInfo
	// User list data | User列表数据
	Data UserListInfo `json:"data"`
}

// User list data | User列表数据
// swagger:model UserListInfo
type UserListInfo struct {
	BaseListInfo
	// The API list data | User列表数据
	Data []UserInfo `json:"data"`
}

// Get user list request params | User列表请求参数
// swagger:model UserListReq
type UserListReq struct {
	PageInfo
	// User account.
	Account *string `json:"account,optional"`
	// User name.
	Name *string `json:"name,optional"`
	// User password.
	Password *string `json:"password,optional"`
}

// User information response | User信息返回体
// swagger:model UserInfoResp
type UserInfoResp struct {
	BaseDataInfo
	// User information | User数据
	Data UserInfo `json:"data"`
}

// The response data of account information | Account信息
// swagger:model AccountInfo
type AccountInfo struct {
	BaseIDInfo
	// account username
	Username *string `json:"username,optional"`
	// account port
	Port *uint32 `json:"port,optional"`
	// protocol of the this account.
	Protocol *uint8 `json:"protocol,optional"`
	// account password
	Password *string `json:"password,optional"`
	// private_key of the this account.
	PrivateKey *string `json:"privateKey,optional"`
	// account belong to
	DeviceId *uint64 `json:"deviceId,optional"`
}

// The response data of account list | Account列表数据
// swagger:model AccountListResp
type AccountListResp struct {
	BaseDataInfo
	// Account list data | Account列表数据
	Data AccountListInfo `json:"data"`
}

// Account list data | Account列表数据
// swagger:model AccountListInfo
type AccountListInfo struct {
	BaseListInfo
	// The API list data | Account列表数据
	Data []AccountInfo `json:"data"`
}

// Get account list request params | Account列表请求参数
// swagger:model AccountListReq
type AccountListReq struct {
	PageInfo
	// account username
	Username *string `json:"username,optional"`
	// account password
	Password *string `json:"password,optional"`
	// private_key of the this account.
	PrivateKey *string `json:"privateKey,optional"`
}

// Account information response | Account信息返回体
// swagger:model AccountInfoResp
type AccountInfoResp struct {
	BaseDataInfo
	// Account information | Account数据
	Data AccountInfo `json:"data"`
}

// The response data of device information | Device信息
// swagger:model DeviceInfo
type DeviceInfo struct {
	BaseIDInfo
	// The name of the device.
	Name *string `json:"name,optional"`
	// login host
	Host *string `json:"host,optional"`
	// Description of the device.
	Description *string `json:"description,optional"`
}

// The response data of device list | Device列表数据
// swagger:model DeviceListResp
type DeviceListResp struct {
	BaseDataInfo
	// Device list data | Device列表数据
	Data DeviceListInfo `json:"data"`
}

// Device list data | Device列表数据
// swagger:model DeviceListInfo
type DeviceListInfo struct {
	BaseListInfo
	// The API list data | Device列表数据
	Data []DeviceInfo `json:"data"`
}

// Get device list request params | Device列表请求参数
// swagger:model DeviceListReq
type DeviceListReq struct {
	PageInfo
	// The name of the device.
	Name *string `json:"name,optional"`
	// login host
	Host *string `json:"host,optional"`
	// Description of the device.
	Description *string `json:"description,optional"`
}

// Device information response | Device信息返回体
// swagger:model DeviceInfoResp
type DeviceInfoResp struct {
	BaseDataInfo
	// Device information | Device数据
	Data DeviceInfo `json:"data"`
}
